[{"title":"StateMachine","type":0,"sectionRef":"#","url":"api/StateMachine","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"StateMachine","url":"api/StateMachine#functions","content":" "},{"title":"transition​","type":1,"pageTitle":"StateMachine","url":"api/StateMachine#transition","content":"&lt;/&gt; StateMachine:transition(eventName: string) → StateMachine Returns a new StateMachine with the post-transition state.  "},{"title":"lock​","type":1,"pageTitle":"StateMachine","url":"api/StateMachine#lock","content":"&lt;/&gt; StateMachine:lock(eventName: string) → StateMachine Returns a new StateMachine where the event can no longer be triggered. note Locking and unlocking is layer-based, which means that locking twice results in 2 layers, thus, to actually unlock the event, you now have to unlock it 2 times.  "},{"title":"unlock​","type":1,"pageTitle":"StateMachine","url":"api/StateMachine#unlock","content":"&lt;/&gt; StateMachine:unlock(eventName: string) → StateMachine Returns a new StateMachine where the event can be triggered, but only if no lock layer remains.  "},{"title":"IsLocked​","type":1,"pageTitle":"StateMachine","url":"api/StateMachine#IsLocked","content":"&lt;/&gt; StateMachine:IsLocked(eventName: string) → boolean Returns true if there are 1 or more layers of lock for the event.  "},{"title":"State​","type":1,"pageTitle":"StateMachine","url":"api/StateMachine#State","content":"&lt;/&gt; StateMachine:State() → string Returns the state of the machine.  "},{"title":"Trigger​","type":1,"pageTitle":"StateMachine","url":"api/StateMachine#Trigger","content":"&lt;/&gt; StateMachine:Trigger() → Option&lt;string&gt; Returns the last triggered event wrapped in an option or option.None if no event has been triggerd yet. Option's API: https://sleitnick.github.io/RbxUtil/api/Option/  "},{"title":"Can​","type":1,"pageTitle":"StateMachine","url":"api/StateMachine#Can","content":"&lt;/&gt; StateMachine:Can(eventName: string) → boolean Returns true if the event can be triggered based on the machine's current state. "}]